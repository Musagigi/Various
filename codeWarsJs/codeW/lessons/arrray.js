//получение последних элементов при помощи 'at'
let fruits = ['apple', 'orange', 'plum']
console.log(fruits[fruits.length-2]) //можно по старинке
console.log(fruits.at(-1)) //но эта запись короче
console.log(fruits.at(1),'\n')

//добавление и удаление из массива
// Вызов fruits.push(...) равнозначен fruits[fruits.length] = ... УЗНАТЬ ПРО ЭТО
//pop - дуляет в конце и показывает что удалил, push - добавляет в конец
//shift -удаляет в начале и показывает что удаляет, unshift - доб. в конец


//перебор массивов
//for..in лучше не использовать для массивов
//for..of для массивов или обычный for работает быстрее всего
let names = ['jon', 'djack', 'all', 'petr']
//цикл for_of не предоставляет доступ к индексу текщего элемента
for (let name of names) { //показывает только его значение
    console.log(name) //но в большинстве случаев это достаточно
}
names[4] = 'alex' //поставили на 4 индекс
console.log(names.length,'\n')//покажет наибольший индекс[4] и + 1, в итоге 5
//length - если быть точным, это не кол-во элементов массива
//а наибольший индекс + 1

//можно перезаписать length если его < массив станет короче,
// если > ничего интересного не произойдет
let arr = [1, 2, 3, 4, 5]
arr.length = 7 // добавит пустые элементы
console.log(arr)
arr.length = 2 // сократили до 2 элеметов в массиве
console.log(arr)
arr.length = 7 // восстановим его длину
console.log(arr[3], '\n') // undefined: значения не восстановились
//таким образом, самый простой способ очистить массив – это arr.length = 0
